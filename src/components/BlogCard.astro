---
export interface Props {
  title: string;
  description: string;
  href: string;
  image?: string;
  imageAlt?: string;
  category: string;
  author: string;
  publishDate: string;
  tags?: string[];
  featured?: boolean;
}

const {
  title,
  description,
  href,
  image,
  imageAlt,
  category,
  author,
  publishDate,
  tags = [],
  featured = false
} = Astro.props;

const formattedDate = new Date(publishDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});
---

<article class={`article-card ${featured ? 'border-2 border-primary-500' : ''}`}>
  <a href={href} class="block group">
    {/* Image with 3:2 aspect ratio for cards */}
    <div class="aspect-[3/2] overflow-hidden bg-neutral-100">
      {image ? (
        <img
          src={image}
          alt={imageAlt || title}
          loading="lazy"
          class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
        />
      ) : (
        <div class="w-full h-full flex items-center justify-center bg-gradient-to-br from-primary-100 to-primary-50">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-12 h-12 text-primary-300"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
          </svg>
        </div>
      )}
    </div>
    
    {/* Content */}
    <div class="p-6">
      {/* Featured Badge */}
      {featured && (
        <span class="inline-block px-2 py-1 mb-3 text-xs font-semibold text-primary-600 bg-primary-50 rounded">
          Featured
        </span>
      )}
      
      {/* Category */}
      <span class="tag mb-3 inline-block">
        {category.replace('-', ' ')}
      </span>
      
      {/* Title */}
      <h3 class="text-h3 mb-2 line-clamp-2 group-hover:text-primary-500 transition-colors">
        {title}
      </h3>
      
      {/* Description */}
      <p class="text-neutral-600 mb-4 line-clamp-3">
        {description}
      </p>
      
      {/* Meta */}
      <div class="flex items-center gap-2 text-small text-neutral-500">
        <span class="font-medium text-neutral-700">{author}</span>
        <span>â€¢</span>
        <time datetime={publishDate}>{formattedDate}</time>
      </div>
      
      {/* Tags (show max 3) */}
      {tags.length > 0 && (
        <div class="mt-4 flex flex-wrap gap-2">
          {tags.slice(0, 3).map((tag) => (
            <span class="text-xs px-2 py-1 bg-neutral-100 text-neutral-600 rounded">
              {tag}
            </span>
          ))}
          {tags.length > 3 && (
            <span class="text-xs px-2 py-1 text-neutral-500">
              +{tags.length - 3} more
            </span>
          )}
        </div>
      )}
    </div>
  </a>
</article>

<style>
  /* Line clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
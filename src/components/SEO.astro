---
export interface Props {
  title: string;
  description: string;
  image?: string;
  article?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  keywords?: string[];
}

const {
  title,
  description,
  image = '/og-image.jpg',
  article = false,
  publishedTime,
  modifiedTime,
  author,
  keywords = []
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const imageURL = new URL(image, Astro.site);

// Schema.org structured data for blog posts
const schemaData = article ? {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  description: description,
  image: imageURL.toString(),
  datePublished: publishedTime,
  dateModified: modifiedTime || publishedTime,
  author: {
    '@type': 'Person',
    name: author || 'RentGrab Team',
  },
  publisher: {
    '@type': 'Organization',
    name: 'RentGrab',
    logo: {
      '@type': 'ImageObject',
      url: new URL('/rentgrab_logo.svg', Astro.site).toString(),
    },
  },
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': canonicalURL.toString(),
  },
} : {
  '@context': 'https://schema.org',
  '@type': 'WebSite',
  name: 'RentGrab Blog',
  url: Astro.site?.toString(),
  publisher: {
    '@type': 'Organization',
    name: 'RentGrab',
    logo: {
      '@type': 'ImageObject',
      url: new URL('/rentgrab_logo.svg', Astro.site).toString(),
    },
  },
};
---

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />

<!-- Keywords -->
{keywords.length > 0 && (
  <meta name="keywords" content={keywords.join(', ')} />
)}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? 'article' : 'website'} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageURL} />
<meta property="og:site_name" content="RentGrab Blog" />
<meta property="og:locale" content="en_US" />

<!-- Article specific Open Graph tags -->
{article && publishedTime && (
  <meta property="article:published_time" content={publishedTime} />
)}
{article && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime} />
)}
{article && author && (
  <meta property="article:author" content={author} />
)}
{article && keywords.map((tag) => (
  <meta property="article:tag" content={tag} />
))}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageURL} />
<meta property="twitter:site" content="@rentgrab" />
<meta property="twitter:creator" content="@rentgrab" />

<!-- Schema.org Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(schemaData)} />

<!-- Additional SEO -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="author" content={author || 'RentGrab'} />
<meta name="publisher" content="RentGrab" />

<!-- Theme Color -->
<meta name="theme-color" content="#ff385c" />